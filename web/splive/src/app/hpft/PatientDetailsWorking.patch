Index: app/models/api/patient-models.ts
===================================================================
--- app/models/api/patient-models.ts	(revision 2081)
+++ app/models/api/patient-models.ts	(nonexistent)
@@ -1,451 +0,0 @@
-export class PatientDataAddRequest {
-    patientdetails: string;
-    medicaldetails: string;
-    patientfiletemplate: number;
-    patientid: number;
-    spid: number;
-    status: number;
-    spname: string;
-    dischargedon: Date;
-}
-export class PatientDetailAddRequest {
-    patientname: string;
-    age: number;
-    emergencycontactno: string;
-    patientregistrationno: string;
-    ward: number;
-    bedno: number;
-    admissiondate: Date;
-    dischargedate: Date;
-    bloodgroup: string;
-    weight: number;
-    drinst: string;
-    gender: string;
-}
-export class MedicalDetailAddRequest {
-    reasonadmission: string;
-    treatmentdone: string;
-    allergies: string;
-    patientmedicalhistory: string;
-
-}
-// export class PatientFileAddRequest {
-//     patientfile: string;
-//     spcid: number;
-// }
-
-export class PatientDetaFilterRequest {
-    patientname: string;
-    age: number;
-    emergencycontactno: string;
-    patientregistrationno: string;
-    ward: string;
-    bedno: number;
-    admissiondate: Date;
-    dischargedate: Date;
-    statusid: number;
-}
-export class PatientDataListResponse {
-    patientdetails: string;
-    medicaldetails: string;
-    patientfiletemplate: string;
-    patientid: number;
-}
-export class StatusChangeRequest {
-    status: number;
-    patientid: number;
-    // discharge:  Date;
-}
-
-export class PatientTxnRequest {
-    spid: number;
-    // startdate: Date;
-    // enddate: Date;
-    servinid: number;
-}
-
-export class PersonDataAddRequest {
-    reportname: string;
-    age: number;
-    persondate: Date;
-    patientregistrationno: string;
-    ward: number;
-    bedno: number;
-    admissiondate: Date;
-    dischargedate: Date;
-    bloodgroup: string;
-    weight: number;
-    drinst: string;
-    gender: string;
-}
-
-//Chandan......
-// patient master add
-export class PatientAddRequest {
-    uuid: string;
-    patientregno: string;
-    fname: string;
-    lname: string;
-    mobno: string;
-    age: string;
-    bloodgrp: string;
-    gender: string;
-}
-
-//Master List Display
-export class PatientRequestFilterDataModel {
-    cpmid: number;
-    fname: string;
-    lname: string;
-    mobno: string;
-    spid: number;
-    bedno: string;
-    status: number;
-    admittedon: Date;
-}
-
-// patient master add
-export class AdmissionAddRequest {
-    uuid: string;
-    patientid: number;
-    patientregno: string;
-    bedno: string;
-    status: number;
-    spid: number;
-    drincharge: number;
-    admittedon: Date;
-    dischargedon: Date;
-}
-
-
-//Patient List for Search the list first
-export class PatientFilterRequest {
-    fname: string;
-    lname: string;
-    mobno: string;
-    spid: number;
-    bedno: string;
-    status: number;
-    patientregno: string;
-    admittedon: Date;
-}
-
-
-//Patient List Response for display first list
-export class PatientDetaListResponse {
-    patientid: number;
-    admissionid: number;
-    cpmid: number;
-    fname: string;
-    lname: string;
-    mobno: string;
-    bedno: string;
-    status: number;
-    spid: number;
-    patientregno: string;
-    drincharge: number;
-    admittedon: Date;
-    dischargedon: Date;
-}
-
-
-//for search  in add patient
-export class PatientSearchRequestFilter {
-
-    fname: string;
-    lname: string;
-    mobno: string;
-}
-
-//patient list for add patient
-export class PatientSearchResponseFilter {
-    patientid: number;
-    cpmid: number;
-    patientregno: string;
-    fname: string;
-    lname: string;
-    mobno: string;
-    age: string;
-    bloodgrp: string;
-    gender: string;
-    createdon: Date;
-    updatedon: Date;
-}
-
-//Patient Update Request
-export class PatientUpdateRequest {
-    patientid: number;
-    patientregno: string;
-    fname: string;
-    lname: string;
-    mobno: string;
-    age: string;
-    bloodgrp: string;
-    gender: string;
-}
-
-//Patient Update Response
-export class PatientUpdateResponse {
-    patientid: number;
-    admissionid: number;
-    cpmid: number;
-    patientregno: string;
-    fname: string;
-    lname: string;
-    mobno: string;
-    age: string;
-    bloodgrp: string;
-    gender: string;
-    createdon: Date;
-    updatedon: Date;
-}
-
-//update admission request
-export class AdmissionUpdateRequest {
-    admissionid: number;
-    uuid: string;
-    patientid: number;
-    patientregno: string;
-    bedno: string;
-    status: number;
-    spid: number;
-    drincharge: number;
-    admittedon: Date;
-    dischargedon: Date;
-}
-
-// Admission Info Response
-export class AdmissionUpdateResponse {
-    admissionid: number;
-    cpmid: number;
-    patientid: number;
-    patientregno: string;
-    bedno: string;
-    status: number;
-    spid: number;
-    drincharge: number;
-    admittedon: Date;
-    dischargedon: Date;
-    createdon: Date;
-    updatedon: Date;
-}
-
-//Status Api for patient to show where patient is hospitalized or not
-export class PatientStatus {
-    admissionid: number;
-    status: number;
-}
-
-//Define for gloablly
-export class JSONBaseDataModel<T> {
-    version: number;
-    data: T;
-}
-
-
-//person accompanying start from here.
-
-export class PersonAccompanyingInfo {
-    name: string;
-    age: number;
-    gender: number;
-    address: string;
-    relationshipwithpatient: string;
-    contact: string;
-    alternatecontact: string;
-}
-// Personal detail request
-export class PersonalDetailsRequest {
-    personaldetailsid: number;
-    patientid: number;
-    admissionid: number;
-    uuid: string
-    otherdetails: string;
-    personaccompanying: string;
-}
-// Personal detail response
-export class PersonalDetailsResponse {
-    personaldetailsid: number;
-    patientid: number;
-    admissionid: number;
-    uuid: string;
-    otherdetails: string;
-    personaccompanying: string;
-}
-
-export class AdmissionAddResponseModel {
-    admissionid: number;
-    personaldetailsid: number;
-    medicaldetailsid: number;
-}
-
-//status patient discharge
-export class AdmissionStatusRequest {
-    admissionid: number;
-    status: number;
-    dischargedon: Date;
-}
-
-//Medical data start from here
-export class JSONInnerData {
-    text: string;
-    date: Date;
-}
-
-export class MedicalDetailsRequest {
-    uuid: string;
-    patientid: number;
-    admissionid: number;
-    presentcomplaints: string;
-    reasonforadmission: string;
-    historypresentillness: string;
-    pasthistory: string;
-    treatmentbeforeadmission: string;
-    investigationbeforeadmission: string;
-    familyhistory: string;
-    allergies: string;
-    personalhistory: string;
-    medicaldetialsid: number;
-}
-
-export class MedicalDetailsResponse {
-    uuid: string;
-    patientid: number;
-    admissionid: number;
-    presentcomplaints: string;
-    reasonforadmission: string;
-    historypresentillness: string;
-    pasthistory: string;
-    treatmentbeforeadmission: string;
-    investigationbeforeadmission: string;
-    familyhistory: string;
-    allergies: string;
-    personalhistory: string;
-    medicaldetialsid: number;
-}
-
-export class PresentComplaint {
-    medicaldetialsid: number;
-    presentcomplaints: string;
-}
-
-export class ReasonForAdmission {
-
-    medicaldetialsid: number;
-    reasonforadmission: string;
-}
-
-export class HistoryPresentIllness {
-    medicaldetialsid: number;
-    historypresentillness: string;
-}
-
-export class PastHistory {
-    medicaldetialsid: number;
-    pasthistory: string;
-}
-
-export class TreatmentBeforeAdmission {
-    medicaldetialsid: number;
-    treatmentbeforeadmission: string;
-}
-
-export class InvestigationBeforeAdmission {
-    medicaldetialsid: number;
-    investigationbeforeadmission: string;
-}
-
-export class FamilyHistory {
-    medicaldetialsid: number;
-    familyhistory: string;
-}
-
-export class Allergies {
-    medicaldetialsid: number;
-    allergies: string;
-}
-
-export class PersonalHistoryInfo {
-    medicaldetialsid: number;
-    weight: WeightData;
-    alcohol: AlcoholData;
-    smoking: SmokData;
-    other: string;
-}
-
-export class SmokData {
-    aplicable: boolean;
-    smokingquantity: string;
-    smokingcomment: string;
-}
-
-export class AlcoholData {
-    aplicable: boolean;
-    alcoholquantity: string;
-    alcoholcomment: string;
-}
-
-export class WeightData {
-    weight: string;
-    weighttendency: string;
-}
-
-export class PersonalHistory {
-    medicaldetialsid: number;
-    personalhistory: string;
-}
-
-
-
-//Pethology start from here
-export class PathologyResponse {
-    id: number
-    uuid: string;
-    pathologyid: number;
-    admissionid: number;
-    testperformed: string;
-    treatmentid: number;
-    comments: string;
-    testresult: string;
-    documentid: number;
-    documentuuid: string;
-    documentname: string;
-    testperformedtime: string;
-    value: string;
-}
-export class PathologyFilterRequest {
-    admissionid: number;
-}
-
-//Treatment start from here
-export class TreatmentResponse {
-    id: number
-    uuid: string;
-    treatmentid: number;
-    admissionid: number;
-    treatmentdone: string;
-    details: string;
-    postobservation: string;
-    documentid: number;
-    documentuuid: string;
-    documentname: string;
-    treatmentperformedtime: string;
-    value: string;
-}
-export class TreatmentFilterRequest {
-    admissionid: number;
-}
-
-export class CheckPatientRequest {
-    patientid: number;
-}
-export class CheckPatientResponse {
-    patientid: number;
-    status: number;
-}
-
-export class DrInchargeListResponse {
-    usrid: number;
-    fname: string;
-    lname: string;
-}
\ No newline at end of file
Index: app/models/ui/patient-models.ts
===================================================================
--- app/models/ui/patient-models.ts	(revision 2081)
+++ app/models/ui/patient-models.ts	(working copy)
@@ -267,7 +267,7 @@
     uuid: string;
     otherdetails: string;
     personAccompanyingData: JSONBaseDataModel<PersonAccompanyingInfo[]>;
-    copyToAddPerson(personalDetailsRequest: PersonalDetailsRequest) {
+    copyToAddPersonAccompyning(personalDetailsRequest: PersonalDetailsRequest) {
         personalDetailsRequest.personaldetailsid = this.personaldetailsid;
         personalDetailsRequest.uuid = this.uuid;
         personalDetailsRequest.patientid = this.patientid;
Index: app/modules/patients/pathology-report/add-pathology-report/add-pathology-report.component.ts
===================================================================
--- app/modules/patients/pathology-report/add-pathology-report/add-pathology-report.component.ts	(revision 2081)
+++ app/modules/patients/pathology-report/add-pathology-report/add-pathology-report.component.ts	(working copy)
@@ -59,7 +59,6 @@
       pathologyReportAddRequest.documentuuidlist = [];
       if (this.uploadedDocuments.length > 0) {
         this.uploadedDocuments.forEach((item) => {
-          console.log('item.documentid', item);
           pathologyReportAddRequest.documentuuidlist.push(item.documentid);
         });
       }
@@ -79,9 +78,7 @@
     // code block for appending value to form data
 
     // formdata.append('UUID', uuid.getUuid());
-    console.log('this.doc_Array', this.doc_Array);
     formdata.append('file', this.doc_Array, this.doc_Array.name);
-    console.log(' formdata', formdata);
     this.patientService.uploadReportsDocuments(formdata).subscribe(documentsPayloadResponse => {
       if (documentsPayloadResponse) {
         if (documentsPayloadResponse.issuccess) {
@@ -101,7 +98,6 @@
     if (this.documentFile.length > 0) {
       // document size validations
     }
-    console.log('this.documentFile', this.documentFile);
   }// end of fucntion.
 
   cancle() {
Index: app/modules/patients/patient-admission/patient-admission.component.ts
===================================================================
--- app/modules/patients/patient-admission/patient-admission.component.ts	(revision 2087)
+++ app/modules/patients/patient-admission/patient-admission.component.ts	(working copy)
@@ -116,6 +116,7 @@
     this.patientService.admissionAddPatient(admissionAddRequest).subscribe(payloadResponse => {
       if (payloadResponse && payloadResponse.issuccess) {
         this.dataModel.admissionid = payloadResponse.data.admissionid;
+        this.dataModel.copyTo(this.dataModelOrg);
         this.recordState = EDITABLE_RECORD_STATE.ADD;
         this.setFormMode(FORM_MODE.VIEW);
         this.patientService.setAdmissionId(payloadResponse.data.admissionid);
Index: app/modules/patients/patient-details/patient-details.component.ts
===================================================================
--- app/modules/patients/patient-details/patient-details.component.ts	(revision 2081)
+++ app/modules/patients/patient-details/patient-details.component.ts	(working copy)
@@ -1,8 +1,8 @@
-import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';
+import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';
 import { ActivatedRoute, Router } from '@angular/router';
-import { Subscription, Subject } from 'rxjs';
+import { Subscription } from 'rxjs';
 import { TranslatePipe } from '../../../../../shared/pipes/translate/translate.pipe';
-import { EditRecordBase, EDITABLE_RECORD_STATE, FORM_MODE } from '../../../../../shared/views/edit-record-base';
+import { EditRecordBase } from '../../../../../shared/views/edit-record-base';
 import { PatientDataModel } from '../../../models/ui/patient-models';
 import { PatientService } from '../../../services/patient.service';
 
Index: app/modules/patients/patient-list/patient-view/patient-view.component.css
===================================================================
--- app/modules/patients/patient-list/patient-view/patient-view.component.css	(revision 2081)
+++ app/modules/patients/patient-list/patient-view/patient-view.component.css	(working copy)
@@ -6,3 +6,8 @@
         position: fixed !important;
         z-index: 100000 !important; /* set value you need */
     }
+
+.amazingtimepicker{
+        position: fixed !important;
+        z-index: 200000 !important;
+    }
Index: app/modules/patients/patient-list/patient-view/patient-view.component.html
===================================================================
--- app/modules/patients/patient-list/patient-view/patient-view.component.html	(revision 2081)
+++ app/modules/patients/patient-list/patient-view/patient-view.component.html	(working copy)
@@ -147,8 +147,7 @@
                 <div>
                   <mat-form-field class="full-width">
                     <input matInput type="time" placeholder="Choose Time" [(ngModel)]="selectedStartTime" value="{{selectedStartTime}}" formControlName="dischargedTimeControls" required>
-                    <button color="accent" atp-time-picker type="button" matSuffix mat-icon-button aria-label="Choose"
-                      (click)="openStartTime()">
+                    <button color="accent" type="button" matSuffix mat-icon-button aria-label="Choose" (click)="openStartTime()">
                       <i class="fa fa-clock-o" aria-hidden="true"></i>
                     </button>
                     <mat-error *ngIf="editableForm.controls['dischargedTimeControls'].hasError('required')">
Index: app/modules/patients/patient-list/patient-view/patient-view.component.ts
===================================================================
--- app/modules/patients/patient-list/patient-view/patient-view.component.ts	(revision 2081)
+++ app/modules/patients/patient-list/patient-view/patient-view.component.ts	(working copy)
@@ -172,12 +172,13 @@
     dataListRequest.orderdirection = this.sort.direction;
     return this.patientService.getDataList(dataListRequest);
   }
-  viewDetails(id: number, admissionid: number) {
+  viewDetails(id: number, admissionid: number, personaldetailsid: number) {
     //setting patient id for further use
     this.patientService.patientid = id;
     this.patientService.admissionid = admissionid;
+    this.patientService.personaldetailsid = personaldetailsid;
     this.patientService.selcetdIndex = 0;
-    this.router.navigate(['patients', 'patient_admission'], { queryParams: { id: id, admissionid: admissionid, callbackurl: 'patients' }, skipLocationChange: true });
+    this.router.navigate(['patients', 'patient_admission'], { queryParams: { id: id, admissionid: admissionid,personaldetailsid:personaldetailsid, callbackurl: 'patients' }, skipLocationChange: true });
   }
 
 
Index: app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.html
===================================================================
--- app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.html	(revision 2081)
+++ app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.html	(working copy)
@@ -5,7 +5,7 @@
         <!-- <h5>First Contact </h5> -->
         <div class="form-group form-primary " *ngIf="formMode === 1">
           <mat-form-field class="full-width" id="point-selection ">
-            <input matInput placeholder="Person Name" formControlName="personnameControl" [(ngModel)]="name"  maxlength="25" required>
+            <input matInput placeholder="Person Name" formControlName="personnameControl" [(ngModel)]="personAccompanyDataItem.data.name"  maxlength="25" required>
             <mat-error *ngIf="editableForm.controls['personnameControl'].hasError('required')">
               {{'VALIDATION_REQUIRED_FIELD'|translate}}
             </mat-error>
@@ -13,22 +13,22 @@
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0" >
           <span class="viewlabel">Person Name</span>
-          <label class="viewtext">{{ name }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.name }}</label>
         </div>
         
         <div class="form-group form-primary " *ngIf="formMode === 1">
           <mat-form-field class="full-width">
-            <input matInput placeholder="Age" formControlName="personageControl"  maxlength="3" [(ngModel)]="age" >
+            <input matInput placeholder="Age" type="number" formControlName="personageControl"  maxlength="3" [(ngModel)]="personAccompanyDataItem.data.age" >
           </mat-form-field>
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0">
           <span class="viewlabel">Age</span>
-          <label class="viewtext">{{ age }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.age }}</label>
         </div>
 
         <div class="form-group form-primary" *ngIf="formMode === 1">
           <mat-form-field>
-            <mat-select placeholder="Gender" [(ngModel)]="gender" formControlName="genderControl" required>
+            <mat-select placeholder="Gender" [(ngModel)]="personAccompanyDataItem.data.gender" formControlName="genderControl" required>
               <mat-option *ngFor="let gend of personGender" [value]="gend.value">
                 {{gend.text | translate }}
               </mat-option>
@@ -40,34 +40,34 @@
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0" id="text">
           <span class="viewlabel">Gender</span>
-          <label class="viewtext">{{ getgender(gender) | translate }}</label>
+          <label class="viewtext">{{ getgender(personAccompanyDataItem.data.gender) | translate }}</label>
         </div>
 
 
         <div class="form-group form-primary " *ngIf="formMode === 1">
           <mat-form-field class="full-width" id="personal-address">
-            <textarea matInput placeholder="Address" rows="3" [(ngModel)]="address" formControlName="personaladdressControl"  maxlength="25"></textarea>
+            <textarea matInput placeholder="Address" rows="3" [(ngModel)]="personAccompanyDataItem.data.address" formControlName="personaladdressControl"></textarea>
           </mat-form-field>
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0">
           <span class="viewlabel">Address</span>
-          <label class="viewtext">{{ address }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.address }}</label>
         </div>
 
         <div class="form-group form-primary " *ngIf="formMode === 1">
           <mat-form-field class="full-width" id="reletion-patient ">
-            <input matInput placeholder="Relationship To The Patient" [(ngModel)]="relationshipwithpatient" formControlName="reletionpatientsControl"  maxlength="25">
+            <input matInput placeholder="Relationship To The Patient" [(ngModel)]="personAccompanyDataItem.data.relationshipwithpatient" formControlName="reletionpatientsControl">
           </mat-form-field>
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0">
           <span class="viewlabel">Relationship To The Patient</span>
-          <label class="viewtext">{{ relationshipwithpatient }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.relationshipwithpatient }}</label>
         </div>
 
         <div class="form-group form-primary" *ngIf="formMode === 1">
           <mat-form-field id="telephone">
             <span matPrefix>+91 &nbsp;</span>
-            <input type="tel" matInput placeholder="Contact Number" [(ngModel)]="contact" formControlName="mobilenoControl" maxlength="10" required>
+            <input type="tel" matInput placeholder="Contact Number" [(ngModel)]="personAccompanyDataItem.data.contact" formControlName="mobilenoControl" maxlength="10" required>
             <mat-error *ngIf="editableForm.controls['mobilenoControl'].hasError('required')">
               {{'VALIDATION_REQUIRED_FIELD'|translate}}
             </mat-error>
@@ -75,19 +75,19 @@
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0" id="text">
           <span class="viewlabel">Contact Number</span>
-          <label class="viewtext">{{ contact }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.contact }}</label>
         </div>
 
         <div class="form-group form-primary" *ngIf="formMode === 1">
           <mat-form-field id="telephone">
             <span matPrefix>+91 &nbsp;</span>
-            <input type="tel" matInput placeholder="Alternate Contact Number" [(ngModel)]="alternatecontact" formControlName="alternateContactControl"
+            <input type="tel" matInput placeholder="Alternate Contact Number" [(ngModel)]="personAccompanyDataItem.data.alternatecontact" formControlName="alternateContactControl"
               maxlength="10">
           </mat-form-field>
         </div>
         <div class="form-group form-primary" *ngIf="formMode === 0">
           <span class="viewlabel">Alternate Contact Number</span>
-          <label class="viewtext">{{ alternatecontact }}</label>
+          <label class="viewtext">{{ personAccompanyDataItem.data.alternatecontact }}</label>
         </div>
 
         <app-editable-form-footer-toolbar [editRecordBase]="this" (editClick)="editForm()"></app-editable-form-footer-toolbar>
Index: app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.ts
===================================================================
--- app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.ts	(revision 2081)
+++ app/modules/patients/patient-person-accompanies/patient-person-accompanies.component.ts	(working copy)
@@ -1,14 +1,13 @@
-import { Component, OnInit, OnDestroy } from '@angular/core';
-import { ActivatedRoute, Router } from '@angular/router';
+import { Component, OnDestroy, OnInit } from '@angular/core';
+import { FormControl, FormGroup, Validators } from '@angular/forms';
+import { JSONBaseDataModel, PersonAccompanyingInfo, PersonalDetailsRequest } from 'app/models/api/patient-data-models';
 import { Subscription } from 'rxjs';
 import { EnumDataSourceItem } from '../../../../../shared/models/ui/enum-datasource-item';
-import { TranslatePipe } from '../../../../../shared/pipes/translate/translate.pipe';
 import { AppNotificationService } from '../../../../../shared/services/notification/app-notification.service';
-import { EditRecordBase, EDITABLE_RECORD_STATE, FORM_MODE } from '../../../../../shared/views/edit-record-base';
+import { EDITABLE_RECORD_STATE, EditRecordBase, FORM_MODE } from '../../../../../shared/views/edit-record-base';
 import { PatientPersonalDetails } from '../../../models/ui/patient-models';
 import { PatientService } from '../../../services/patient.service';
-import { FormGroup, FormControl, Validators } from '@angular/forms';
-import { PersonAccompanyingInfo, JSONBaseDataModel, PersonalDetailsRequest } from 'app/models/api/patient-data-models';
+import { ActivatedRoute } from '@angular/router';
 
 @Component({
   selector: 'app-patient-person-accompanies',
@@ -18,11 +17,16 @@
 export class PatientPersonAccompaniesComponent extends EditRecordBase implements OnInit, OnDestroy {
 
   dataModel = new PatientPersonalDetails();
+  dataModelOrg = new PatientPersonalDetails();
   routeSubscription: Subscription;
   patientStates: EnumDataSourceItem<number>[];
   personGender: EnumDataSourceItem<number>[];
   contact: string;
-  personAccompanyingInfo = new JSONBaseDataModel<PersonAccompanyingInfo>();
+  personAccompanyingInfo = new PersonAccompanyingInfo();
+  personAccompanyingInfoArray = new JSONBaseDataModel<PersonAccompanyingInfo[]>();
+  personAccompanyDataItem = new JSONBaseDataModel<PersonAccompanyingInfo>();
+  
+  personAccompanyDataItemOrg = new JSONBaseDataModel<PersonAccompanyingInfo>();
   name: string;
   age: number;
   address: string;
@@ -34,9 +38,7 @@
   constructor(
     private patientService: PatientService,
     private route: ActivatedRoute,
-    private router: Router,
     private appNotificationService: AppNotificationService,
-    private translatePipe: TranslatePipe,
   ) {
     super();
     this.iconCss = 'fa fa-user';
@@ -45,61 +47,107 @@
 
   ngOnInit() {
     this.createControls();
+
     this.showBackButton = false;
     this.personGender = this.patientService.getPersonGender();
-    this.personAccompanyingInfo = new JSONBaseDataModel<PersonAccompanyingInfo>();
-    this.routeSubscription = this.route.queryParams.subscribe(params => {
-      if (params['admissionid']) {
-        this.dataModel.admissionid = Number(params['admissionid']);
-        this.recordState = EDITABLE_RECORD_STATE.UPDATE;
-        this.setFormMode(FORM_MODE.VIEW);
-        if (this.patientService.admissionid) {
+    this.personAccompanyDataItem.data = new PersonAccompanyingInfo();    
+    this.personAccompanyDataItemOrg = this.deepClone(this.personAccompanyDataItem);
+    this.personAccompanyingInfoArray.data = [] ;
+
+      //setTimeout(() => {
+      this.routeSubscription = this.route.queryParams.subscribe(params => {
+        if (params['admissionid']) {
+          this.dataModel.admissionid = Number(params['admissionid']);
+          this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+          this.setFormMode(FORM_MODE.VIEW);
+          if (this.patientService.admissionid) {
+            this.getPatientPersonalDetailId();
+          }
+        } else if (this.patientService.admissionid) {
           this.getPatientPersonalDetailId();
+          {
+            this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+            this.setFormMode(FORM_MODE.EDITABLE);
+          }
         }
-      } else if (this.patientService.admissionid) {
-        this.getPatientPersonalDetailId();
-        {
-          this.recordState = EDITABLE_RECORD_STATE.UPDATE;
-          this.setFormMode(FORM_MODE.EDITABLE);
-        }
-      }
 
-      this.callbackUrl = params['callbackurl'];
-    });
+        this.callbackUrl = params['callbackurl'];
+      });
+    //});
+
+    // setTimeout(() => {
+    //   if ((this.dataModel.personaldetailsid = this.patientService.personaldetailsid) == null) {
+    //     this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+    //     this.setFormMode(FORM_MODE.EDITABLE);
+    //     this.getPatientPersonalDetailId();
+    //   }
+    //   else if ((this.dataModel.personaldetailsid = this.patientService.personaldetailsid) != null) {
+    //     this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+    //     this.setFormMode(FORM_MODE.VIEW);
+    //     this.getPatientPersonalDetailId();
+    //   }
+    // });
+
+
+
     this.dataModel.personAccompanyingData = new JSONBaseDataModel<PersonAccompanyingInfo[]>();
     this.dataModel.personAccompanyingData.data = [];
   }
 
+
+  deepClone(source):any{
+    return JSON.parse( JSON.stringify(source));      
+  }
+
   //Save function for Family History.
   save() {
     if (this.editableForm.invalid) { return; }
     this.inProgress = true;
-    const patientPersonAccompanyingDetail = new PersonalDetailsRequest();
-    patientPersonAccompanyingDetail.admissionid = this.patientService.admissionid;
-    patientPersonAccompanyingDetail.patientid = this.patientService.patientid;
-    patientPersonAccompanyingDetail.personaldetailsid = this.personaldetailsid;
-    if (this.name || this.age || this.gender || this.address || this.relationshipwithpatient || this.contact || this.alternatecontact) {
-      const personAccompanyingInfo = new JSONBaseDataModel<PersonAccompanyingInfo>();
-      personAccompanyingInfo.data = new PersonAccompanyingInfo();
-      personAccompanyingInfo.data.name = this.name;
-      personAccompanyingInfo.data.age = this.age;
-      personAccompanyingInfo.data.gender = this.gender;
-      personAccompanyingInfo.data.address = this.address;
-      personAccompanyingInfo.data.relationshipwithpatient = this.relationshipwithpatient;
-      personAccompanyingInfo.data.contact = this.contact;
-      personAccompanyingInfo.data.alternatecontact = this.alternatecontact;
-      const tempPerson = new JSONBaseDataModel<PersonAccompanyingInfo[]>();
-      tempPerson.data = [];
-      tempPerson.data.push(personAccompanyingInfo.data);
-      patientPersonAccompanyingDetail.personaccompanying = JSON.stringify(tempPerson);
+    if (this.recordState === EDITABLE_RECORD_STATE.UPDATE) {
+      const patientPersonAccompanyingDetail = new PersonalDetailsRequest();
+      patientPersonAccompanyingDetail.admissionid = this.patientService.admissionid;
+      patientPersonAccompanyingDetail.patientid = this.patientService.patientid;
+      patientPersonAccompanyingDetail.personaldetailsid = this.personaldetailsid;
+
+
+      if(JSON.stringify(this.personAccompanyDataItem) === JSON.stringify( this.personAccompanyDataItemOrg )){
+        this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+        this.setFormMode(FORM_MODE.VIEW);
+        this.inProgress = false;
+        return;
+      }
+
+      if(this.personAccompanyingInfoArray.data.length > 0){
+       this.personAccompanyingInfoArray.data[0] = this.personAccompanyDataItem.data;
+      }else{
+        this.personAccompanyingInfoArray.data.push(this.personAccompanyDataItem.data);
+      }
+
+      patientPersonAccompanyingDetail.personaccompanying = JSON.stringify(this.personAccompanyingInfoArray);
+
       this.patientService.personalAddAccompanying(patientPersonAccompanyingDetail).subscribe(payloadResponse => {
         if (payloadResponse && payloadResponse.issuccess) {
+          this.patientService.personaldetailsid = this.dataModel.personaldetailsid;
           this.appNotificationService.success();
           this.recordState = EDITABLE_RECORD_STATE.UPDATE;
           this.setFormMode(FORM_MODE.VIEW);
+
+          this.personAccompanyDataItemOrg = this.deepClone(this.personAccompanyDataItem);
+
+          this.inProgress = false;
+
+        }else{
+          this.inProgress = false;
         }
       });
+
+      }
     }
+    
+
+
+  onCancelHandler() {
+    Object.assign( this.personAccompanyDataItem.data,this.personAccompanyDataItemOrg.data);
   }
 
   createControls(): void {
@@ -122,7 +170,6 @@
           this.personaldetailsid = payloadResponse.data.personaldetails.personaldetailsid;
           if (this.personaldetailsid) {
             this.getPatientPersonDetails();
-
           }
         }
       }
@@ -137,25 +184,35 @@
           this.setFormMode(FORM_MODE.VIEW);
           this.personaldetailsid = payloadResponse.data.personaldetailsid;
           this.personaldetailsid = payloadResponse.data.personaldetailsid;
-          const personAccompanyingInfo = new JSONBaseDataModel<PersonAccompanyingInfo[]>();
+          
           if (payloadResponse.data.personaccompanying != null) {
-            const tempPersonAccompanying = JSON.parse(payloadResponse.data.personaccompanying);
-            personAccompanyingInfo.data = [];
-            personAccompanyingInfo.data = tempPersonAccompanying.data || null;
-            personAccompanyingInfo.version = tempPersonAccompanying.version;
-            this.name = personAccompanyingInfo.data[0].name;
-            this.age = personAccompanyingInfo.data[0].age;
-            this.gender = personAccompanyingInfo.data[0].gender;
-            this.address = personAccompanyingInfo.data[0].address;
-            this.relationshipwithpatient = personAccompanyingInfo.data[0].relationshipwithpatient;
-            this.contact = personAccompanyingInfo.data[0].contact;
-            this.alternatecontact = personAccompanyingInfo.data[0].alternatecontact;
+            //const tempPersonAccompanying = JSON.parse(payloadResponse.data.personaccompanying);
+            this.personAccompanyingInfoArray = JSON.parse(payloadResponse.data.personaccompanying);
+            
+            if (this.personAccompanyingInfoArray.data.length > 0) {
+              this.personAccompanyDataItem.data =  this.personAccompanyingInfoArray.data[0]; 
+
+              this.personAccompanyDataItemOrg = this.deepClone(this.personAccompanyDataItem);               
+            }
+
+          }else{
+            this.recordState = EDITABLE_RECORD_STATE.UPDATE;
+            this.setFormMode(FORM_MODE.EDITABLE);
           }
         }
       }
     });
   }
-
+  // bindData(accompanyDataItem) {
+  //   let accompanyData = accompanyDataItem;
+  //   this.name = accompanyData.name;
+  //   this.age = accompanyData.age;
+  //   this.gender = accompanyData.gender;
+  //   this.address = accompanyData.address;
+  //   this.relationshipwithpatient = accompanyData.relationshipwithpatient;
+  //   this.contact = accompanyData.contact;
+  //   this.alternatecontact = accompanyData.alternatecontact;
+  // }
   closeForm() { }
 
   //gender value
Index: app/modules/patients/treatment-report/add-treatment-report/add-treatment-report.component.ts
===================================================================
--- app/modules/patients/treatment-report/add-treatment-report/add-treatment-report.component.ts	(revision 2081)
+++ app/modules/patients/treatment-report/add-treatment-report/add-treatment-report.component.ts	(working copy)
@@ -59,7 +59,6 @@
       treatmentReportRequest.documentuuidlist = [];
       if (this.uploadedDocuments.length > 0) {
         this.uploadedDocuments.forEach((item) => {
-          console.log('item.documentid', item);
           treatmentReportRequest.documentuuidlist.push(item.documentid);
         });
       }
@@ -79,9 +78,7 @@
     // code block for appending value to form data
 
     // formdata.append('UUID', uuid.getUuid());
-    console.log('this.doc_Array', this.doc_Array);
     formdata.append('file', this.doc_Array, this.doc_Array.name);
-    console.log(' formdata', formdata);
     this.patientService.uploadReportsDocuments(formdata).subscribe(documentsPayloadResponse => {
       if (documentsPayloadResponse) {
         if (documentsPayloadResponse.issuccess) {
@@ -101,7 +98,6 @@
     if (this.documentFile.length > 0) {
       // document size validations
     }
-    console.log('this.documentFile', this.documentFile);
   }// end of fucntion.
 
   cancle() {
Index: environments/environment.ts
===================================================================
--- environments/environment.ts	(revision 2081)
+++ environments/environment.ts	(working copy)
@@ -5,6 +5,8 @@
 
 export const environment = {
   production: false,
-  appbaseurl: 'http://172.105.232.148:91', // http://192.168.1.51:91
+  // appbaseurl: 'http://172.105.232.148:91',
+  // appbaseurl: 'http://192.168.1.73:91', 
+    appbaseurl: 'http://192.168.1.60:91', 
   prodcode: 'SPL_HPFT'
 };
