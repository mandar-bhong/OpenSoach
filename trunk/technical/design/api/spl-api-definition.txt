1. Login

API Name: /api/v1/login
Request Method: POST
request: AuthRequest -> trunk\technical\src\web\splive\src\app\shared\models\api\auth-request.ts
response: AuthResponse -> trunk\technical\src\web\splive\src\app\shared\models\api\auth-response.ts
Logic:
validate username and password in spl_master_user_tbl. 
return error code if the usr_state is not equal to 1 (Active).
return error code if the usr_category is 2 (Customer user) - not applicable

if(2)
select cpm_id (table `spl_master_usr_cpm_tbl`, `spl_master_cust_prod_mapping_tbl`, `spl_master_product_tbl`) associated with user where the prodcode received from user matches.

if no cpm_id attached for the supplied prodcode, return error code.

if(1)

generate token
if(2)
get user role (`spl_master_usr_cpm_tbl`)
if(1)
spl_user_tbl get user role
Set session
- token
- user_id
- cpm_id - if (2)
- role_id
- customer_id if(2)

2. Get minimum details of user after login

API Name: /api/v1/user/info/login
request: null
response: UserLoginInfoResponse->trunk\technical\src\web\splive\src\app\shared\models\api\user-models.ts
Logic:
read  token from the request header
get user_id from the session matching with the token
read `spl_master_usr_details_tbl`

3. get minimum details of the customer to which the user belongs
API Name: /api/cu/v1/customer/info/login
Request Method: GET
request: null
response: CustomerLoginInfoResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer-models.ts
Logic:
read  token from the request header
get customer_id from the session matching with the token
`spl_master_customer_tbl` `spl_master_corp_tbl`

4. Logout
API Name: /api/v1/logout
Request Method: POST
request: null
response: null
Logic:

Clear user session.

5. Add Customer
API Name: /api/osu/v1/customer/add
Request Method: POST
request: CustomerAddRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: RecordAddResponse->trunk\technical\src\web\splive\src\app\shared\models\api\common-models.ts
Logic:

Insert customer in spl_master_customer and return the inserted record (primary key of table).

cust_state possible values: 
export enum CUSTOMER_STATE {
    NOT_SET = 0,
    ACTIVE = 1,
    INACTIVE = 2,
    SUSPENDED = 3
}

6. Add or Update Customer Details
API Name: /api/osu/v1/customer/update/details
Request Method: POST
request: CustomerAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

Insert or update customer in spl_master_cust_details

7. Add or Update Customer Details
API Name: /api/cu/v1/customer/update/details
Request Method: POST
request: CustomerAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:
use cust_id from session.
Insert or update customer in spl_master_cust_details.

8. Get customer master details
API Name: /api/osu/v1/customer/info/master
Request Method: GET
request: CustomerMasterResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from query parameters

fetch data from spl_master_customer_tbl using cust_id.


9. Get customer master details
API Name: /api/cu/v1/customer/info/master
Request Method: GET
request: CustomerMasterResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from session.

fetch data from spl_master_customer_tbl using cust_id.

10. Get customer details
API Name: /api/osu/v1/customer/info/details
Request Method: GET
request: CustomerDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from query parameters

fetch data from spl_master_cust_details_tbl using cust_id.

11. Get customer details
API Name: /api/cu/v1/customer/info/details
Request Method: GET
request: CustomerDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from session.

fetch data from spl_master_cust_details_tbl using cust_id.

12. Get customer corporate details
API Name: /api/osu/v1/corporate/info
Request Method: GET
request: CorporateDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read corp_id from query parameters 

fetch data from spl_master_corp_details_tbl using cust_id.


13. Get customer corporate details
API Name: /api/cu/v1/corporate/info
Request Method: GET
request: null
response: CorporateDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
Logic:

read cust_id from session and join to get corporate details

fetch data from spl_master_corp_details_tbl using cust_id.

14. Add User
API Name: /api/osu/v1/user/add
Request Method: POST
request: UserAddRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: RecordAddResponse->trunk\technical\src\web\splive\src\app\shared\models\api\common-models.ts
Logic:

Insert user in spl_master_user and return the inserted record (primary key of table).


15. Add or Update User Details
API Name: /api/osu/v1/user/update/details
Request Method: POST
request: UserAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null
Logic:

Insert or update user in spl_master_usr_details

16. Add or Update User Details
API Name: /api/cu/v1/user/update/details
Request Method: POST
request: UserAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null
Logic:
use usr_id from session.
Insert or update customer in spl_master_usr_details.

17. Update User State
API Name: /api/osu/v1/user/update/state
Request Method: POST
request: UserUpdateStateRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null

18. Update User State
API Name: /api/cu/v1/user/update/state
Request Method: POST
request: UserUpdateStateRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null


19.  update password
API Name: /api/v1/user/update/password
Request Method: POST
request: UpdatePasswordRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts 	
response: null

20.  customer data list
API Name: /api/osu/v1/customer/list
Request Method: GET
request: CustomerDataListFilterRequest{
custname:string;
custstate:number;
corpid:number;
}
response: CustomerDataListRespose{
custid:number;
corpid:number;
custname:string;
corpname:string;
custstate:number;
poc1name:string;
poc1emailid:string;
poc1mobileno:string;
createdon:Date;
updateon:Date;
}  

21.  validate auth token
API Name: /api/v1/validateauthtoken
Request Method: GET
request: 
response: 

22.  user data list
API Name: /api/osu/v1/user/list
Request Method: GET
request: UserDataListFilterRequest{
cpmid:number;
usrname:string;
usrcategory:number;
usrstate:number;
}
response: UserDataListResponse{
usrid:number;
usrname:string;
usrcategory:number;
uroleid:number;
urolename:string;
usrstate:number;
usrstatesince:number:
createdon:Date;
updatedon:Date;
} 

23.  user data list
API Name: /api/cu/v1/user/list
Request Method: GET
request: UserDataListFilterRequest{
cpmid:number;
usrname:string;
usrcategory:number;
usrstate:number;
}
response: UserDataListResponse{
usrid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:number;
createdon:Date;
updatedon:Date;
}
Logic: cpmid from session

24.  corp data list
API Name: /api/osu/v1/corporate/list
Request Method: GET
request: CorporateDataListRequestFilter{
corpname:string;
corpmobileno:string;
corpemailid:string;
}
response:  CorporateDataListResponse{
corpid:number;
corpname:string;
corpmobileno:string;
corpemailid:string;
corplandlineno:string;
createdon:Date;
updatedon:Date;
}

25. GetCorportateShortDataList
API Name: /api/osu/v1/corporate/list/short
Request Method: GET
request: null
response: CorporateShortDataResponse[]->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
Logic:
get all corporates from spl_master_corp_tbl

26. Add Corporate
API Name: /api/osu/v1/corporate/add
Request Method: POST
request: CorporateAddRequest{
corpname:string;
corpmobileno:string;
corpemailid:string;
corplandlineno:string;
}
response:
Logic:

Insert user in spl_master_user and return the inserted record (primary key of table).

27. Update Corporate
API Name: /api/osu/v1/corporate/update
Request Method: POST
request: CorporateUpdateRequest{
corpid:number;
corpname:string;
corpmobileno:string;
corpemailid:string;
corplandlineno:string;
}
response:
Logic:

Insert user in spl_master_user and return the inserted record (primary key of table).

28. Add Device
API Name: /api/osu/v1/device/add
Request Method: POST
request: DeviceAddRequest{
devid:number;
custid:number;
serialno:string;
devstate:number;
}
response:inserted id
Logic:

29. Update Device state
API Name: /api/osu/v1/device/update/state
Request Method: POST
request: DeviceUpdateStateRequest{
devid:number;
devstate:number;
}
response:
Logic:

30. Add or Update device Details
API Name: /api/osu/v1/device/update/details
Request Method: POST
request: DeviceAddRequest{
devid:number;
devname:string;
make:string;
technology:string;
techversion:string;
shortdesc:string;
}
response: null
Logic:

Insert or update user in spl_master_dev_details

31. Add or Update device Details
API Name: /api/cu/v1/device/update/details
Request Method: POST
request: DeviceAddRequest{
devname:string;
make:string;
technology:string;
techversion:string;
shortdesc:string;
}
response: null
Logic:

Insert or update device in spl_master_dev_details.

32.  device data list
API Name: /api/osu/v1/device/list
Request Method: GET
request: DeviceDataListFilterRequest{
serialno:string;
custid:number;
custname:string;
devname:string;
}
response: DeviceDataListResponse{
devid:number;
custid:number;
custname:string;
serialno:string;
devstate:number;
devstatesince:Date;
createdon:Date;
updatedon:Date;
devname:string;
connectionstate:number;
connectionstatesince:Date;
syncstate:number;
syncstatesince:Date;
batterylevel:number;
batterylevelsince:Date;
}

33.  device data list
API Name: /api/cu/v1/device/list
Request Method: GET
request: 
response: 

34. Associate device with customer.
API Name: /api/osu/v1/device/associate/customer
Request Method: POST
request: CustomerAssociateDeviceRequest {
custid: number;
devid:number;
}
response: null;

Logic: spl_master_device_tbl

35 Associate device with customer product
API Name: /api/osu/v1/device/associate/customerproduct
Request Method: POST
request: CustomerProductAssociateDeviceRequest {
cpmid: number;
devid:number;
}

36 Associate user with customer
API Name: /api/osu/v1/user/associate/customer
Request Method: POST
request: CustomerAssociateUserRequest {
userid:number;
cpmid: number;
uroleid:number;
ucpmstate:number;
}

response: null;
Logic: `spl_master_usr_cpm_tbl`

37 Associate user with customer
API Name: /api/cu/v1/user/associate/customer
Request Method: POST
request: CustomerAssociateUserRequest {
usrname:string;
uroleid:number;
ucpmstate:number;
}

response: null;
Logic: `spl_master_usr_cpm_tbl`

38 Associate customer with product
API Name: /api/osu/v1/customer/associate/product
Request Method: POST
request: CustomerAssociateProductRequest {
custid:number;
prodid:number;
dbiid:number;
cpmstate:number;
}

response: inserted id;

39 Get product list
API Name: /api/osu/v1/product/list
Request Method: GET
Request:null;
Response: ProductListResponse{
prodid:number;
prodcode:string;
createdon:Date;
updatedon:Date;
}

40 Get dbinstance list
API Name: /api/osu/v1/dbinstance/list
Request Method: GET
Request:null;
Response: DbinstanceListResponse{
dbiid:number;
dbiname:string;
connectionstring:string;
prodid:number;
createdon:Date;
updatedon:Date;
}

41. Get user details
API Name: /api/osu/v1/user/info/details
Request Method: GET
request: 
response: {
usrid:number;
fname:string;
lname:string;
gender:number;
mobileno:string;
alternatecontactno:string;
createdon:Date;
updatedon:Date;
}
Logic:

read usr_id from query parameters

fetch data from spl_master_cust_details_tbl using cust_id.

42. Get user details
API Name: /api/cu/v1/user/info/details
Request Method: GET
request: 
response: {
userid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:Date;
createdon:Date;
updatedon:Date;
}
Logic:

read usr_id from session.

43. Get corporate details
API Name: /api/osu/v1/corporate/info/master
Request Method: GET
request: null
response: CorpInfoResponse{
corpid: number;
corpname: string;
corpmobileno: string;
corpemailid: string;
corplandlineno: string;
createdon: Date;
updatedon: Date;
}
Logic:

read corp_id from query parameters

44. Endpoint Device Authorization
API Name: /api/v1/endpoint/deviceauthorization
Request Method: POST
request: APIDeviceAuthRequest{
	serialno:string;
}
response: APIDeviceAuthResponse {
	token:string;
	locationurl:string;
}

45. Get device details
API Name: /api/osu/v1/device/info/details
Request Method: GET
request: null
response: 

read dev_id from query parameters

46. Get device details
API Name: /api/cu/v1/device/info/details
Request Method: GET
request: null
response: 


47. Get urole list all
API Name: /api/osu/v1/urole/list
Request Method: GET
request: null
response: UroleListShortDataModel {
	uroleid:number;
	urolecode:string;
	urolename:string;
	prodcode:string;
}

48. Get urole list
API Name: /api/v1/urole/list
Request Method: GET
request: APIUroleRequest{
	prodcode:string;
}
response:UroleListShortDataModel {
	uroleid:number;
	urolecode:string;
	urolename:string;
}

49. Get customer product association list
API Name: /api/osu/v1/customer/list/productassociation
Request Method: GET
request: null
response:	CustomerProductAsccociationList{
cpmid:number;
cpmstate:number;
prodid:number;
dbiid:number;
prodcode:string;
dbiname:string;
}

50. cpm state update
API Name: /api/osu/v1/customer/productassociation/update
Request Method: GET
request: CpmStateUpdate{
cpmid:number;
cpmstate:number;
}
response:null

51. customer update
API Name: /api/osu/v1/customer/update
Request Method: POST
request: CustomerUpdate{
custid:number;
custname:string;
custstate:number;
}
response:null

52. Get user product association list
API Name: /api/osu/v1/user/list/productassociation
Request Method: GET
request: null
response:	UserProdAssociationList {
ucpmid:number;
custname:string;
prodcode:string;
urolecode:string;
ucpmstate:number;
ucpmstatesince:Date;
}

53. Get ucpm state update
API Name: /api/osu/v1/user/productassociation/update
Request Method: GET
request: CpmStateUpdate{
ucpmid:number;
ucpmstate:number;
}
response:null

54. Get device product association list
API Name: /api/osu/v1/device/list/productassociation
Request Method: GET
request: null
response:	DeviceProdAssociationList {
custname:string;
prodcode:string;
}

55. GetCustomerShortDataList
API Name: /api/osu/v1/customer/list/short
Request Method: GET
request: null
response: CorporateShortDataResponse{
custid:number;
custname:string;
}
Logic:
get all customers from spl_master_customer_tbl

56. user update
API Name: /api/osu/v1/user/update
Request Method: POST
request: UserUpdate{
userid:number;
uroleid:number;
usrstate:number;
}
response:null

57. Get user master details
API Name: /api/osu/v1/user/info/master
Request Method: GET
request: 
response: {
userid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:number;
createdon:Date;
updatedon:Date;
}
Logic:

read user_id from query parameters

58. Get user master details
API Name: /api/cu/v1/user/info/master
Request Method: GET
request: 
response: {
userid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:number;
createdon:Date;
updatedon:Date;
}

59. Add CU User
API Name: /api/cu/role/v1/user/add
Request Method: POST
request: UserAddRequest{
usrname:string;
uroleid:number;
}
response: null

60. Get customer service point association 
API Name: /api/osu/v1/customer/association/servicepoint
Request Method: GET
request: null
response: null

61. Update customer service point association 
API Name: /api/osu/v1/customer/association/servicepoint/update
Request Method: POST
request: Request{
cpmid:number;
updatecount:number;
}
response: null

62. cu admin Get user master details
API Name: /api/cu/role/v1/user/info/master
Request Method: GET
request: 
response: {
userid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:number;
createdon:Date;
updatedon:Date;
}

63. Get user details
API Name: /api/cu/role/v1/user/info/details
Request Method: GET
request: 
response: {
usrid:number;
usrname:string;
usrcategory:number;
uroleid:number;
usrstate:number;
usrstatesince:Date;
createdon:Date;
updatedon:Date;
}

64. update user master info
API Name: /api/cu/role/v1/user/update
Request Method: POST
request: {
userid:number;
usrname:string;
usrstate:number;
} 
response: null

65. update user details
API Name: /api/cu/role/v1/user/update/details
Request Method: POST
request: {
usrid:number;
fname:string;
lname:string;
gender:number;
mobileno:string;
alternatecontactno:string;
} 
response: null

66. Get user master details
API Name: /api/osu/v1/device/info/master
Request Method: GET
request: 
response: {
devid:number;
custid:number;
serialno:string;
devstate:number;
devstatesince:Date;
createdon:Date;
updatedon:Date;
}


















/api/v1/customer/add - POST

/api/v1/customer/update  - POST

/api/v1/customer/info - GET
/api/v1/customer/info/basic - GET
/api/v1/customer/info/address - GET

/api/v1/customer/list - GET
/api/v1/customer/list/selection - GET
/api/v1/customer/list/basic - GET