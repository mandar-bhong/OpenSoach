1. Login

API Name: /api/v1/login
Request Method: POST
request: AuthRequest -> trunk\technical\src\web\splive\src\app\shared\models\api\auth-request.ts
response: AuthResponse -> trunk\technical\src\web\splive\src\app\shared\models\api\auth-response.ts
Logic:
validate username and password in spl_master_user_tbl. 
return error code if the usr_state is not equal to 1 (Active).
return error code if the usr_category is 2 (Customer user) - not applicable

if(2)
select cpm_id (table `spl_master_usr_cpm_tbl`, `spl_master_cust_prod_mapping_tbl`, `spl_master_product_tbl`) associated with user where the prodcode received from user matches.

if no cpm_id attached for the supplied prodcode, return error code.

if(1)

generate token
if(2)
get user role (`spl_master_usr_cpm_tbl`)
if(1)
spl_user_tbl get user role
Set session
- token
- user_id
- cpm_id - if (2)
- role_id
- customer_id if(2)

2. Get minimum details of user after login

API Name: /api/v1/user/info/login
request: null
response: UserLoginInfoResponse->trunk\technical\src\web\splive\src\app\shared\models\api\user-models.ts
Logic:
read  token from the request header
get user_id from the session matching with the token
read `spl_master_usr_details_tbl`

3. get minimum details of the customer to which the user belongs
API Name: /api/cu/v1/customer/info/login
Request Method: GET
request: null
response: CustomerLoginInfoResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer-models.ts
Logic:
read  token from the request header
get customer_id from the session matching with the token
`spl_master_customer_tbl` `spl_master_corp_tbl`

4. Logout
API Name: /api/v1/logout
Request Method: POST
request: null
response: null
Logic:

Clear user session.

5. Add Customer
API Name: /api/osu/v1/customer/add
Request Method: POST
request: CustomerAddRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: RecordAddResponse->trunk\technical\src\web\splive\src\app\shared\models\api\common-models.ts
Logic:

Insert customer in spl_master_customer and return the inserted record (primary key of table).

cust_state possible values: 
export enum CUSTOMER_STATE {
    NOT_SET = 0,
    ACTIVE = 1,
    INACTIVE = 2,
    SUSPENDED = 3
}

6. Add or Update Customer Details
API Name: /api/osu/v1/customer/update/details
Request Method: POST
request: CustomerAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

Insert or update customer in spl_master_cust_details

7. Add or Update Customer Details
API Name: /api/cu/v1/customer/update/details
Request Method: POST
request: CustomerAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:
use cust_id from session.
Insert or update customer in spl_master_cust_details.

8. Get customer master details
API Name: /api/osu/v1/customer/info/master
Request Method: GET
request: CustomerMasterResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from query parameters

fetch data from spl_master_customer_tbl using cust_id.


9. Get customer master details
API Name: /api/cu/v1/customer/info/master
Request Method: GET
request: CustomerMasterResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from session.

fetch data from spl_master_customer_tbl using cust_id.

10. Get customer details
API Name: /api/osu/v1/customer/info/details
Request Method: GET
request: CustomerDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from query parameters

fetch data from spl_master_cust_details_tbl using cust_id.

11. Get customer details
API Name: /api/cu/v1/customer/info/details
Request Method: GET
request: CustomerDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read cust_id from session.

fetch data from spl_master_cust_details_tbl using cust_id.

12. Get customer corporate details
API Name: /api/osu/v1/corporate/info
Request Method: GET
request: CorporateDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
response: null
Logic:

read corp_id from query parameters 

fetch data from spl_master_corp_details_tbl using cust_id.


13. Get customer corporate details
API Name: /api/cu/v1/corporate/info
Request Method: GET
request: null
response: CorporateDetailsResponse->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
Logic:

read cust_id from session and join to get corporate details

fetch data from spl_master_corp_details_tbl using cust_id.

13. GetCorportateShortDataList
API Name: /api/osu/v1/corporate/list/short
Request Method: GET
request: null
response: CorporateShortDataResponse[]->trunk\technical\src\web\splive\src\app\shared\models\api\customer_models.ts
Logic:
get all corporates from spl_master_corp_tbl

14. Add User
API Name: /api/osu/v1/user/add
Request Method: POST
request: UserAddRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: RecordAddResponse->trunk\technical\src\web\splive\src\app\shared\models\api\common-models.ts
Logic:

Insert user in spl_master_user and return the inserted record (primary key of table).


15. Add or Update User Details
API Name: /api/osu/v1/user/update/details
Request Method: POST
request: UserAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null
Logic:

Insert or update user in spl_master_usr_details

16. Add or Update User Details
API Name: /api/cu/v1/user/update/details
Request Method: POST
request: UserAddDetailsRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null
Logic:
use usr_id from session.
Insert or update customer in spl_master_usr_details.

17. Update State
API Name: /api/osu/v1/user/update/state
Request Method: POST
request: UserUpdateStateRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null

18. Update State
API Name: /api/cu/v1/user/update/state
Request Method: POST
request: UserUpdateStateRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts
response: null


19.  update password
API Name: /api/v1/user/update/password
Request Method: POST
request: UpdatePasswordRequest->trunk\technical\src\web\splive\src\app\shared\models\api\user_models.ts 	
response: null

20.  customer data list
API Name: /api/v1/customer/list
Request Method: POST
request: DataListRequest->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts
response:  DataListResponse->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts

21.  validate auth token
API Name: /api/v1/validateauthtoken
Request Method: POST
request: 
response: 

22.  user data list
API Name: /api/v1/user/list
Request Method: POST
request: DataListRequest->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts
response:  DataListResponse->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts

23.  corp data list
API Name: /api/v1/corp/list
Request Method: POST
request: DataListRequest->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts
response:  DataListResponse->\trunk\technical\src\web\splive\src\app\shared\models\ui\data-list-models.ts

24. Associate device with customer.
API Name: /api/osu/v1/customer/associate/device
Request Method: POST
request: CustomerAssociateDeviceRequest {
custid: number;
devid:number;
}
response: null;

Logic: spl_master_device_tbl

25 Associate device with customer product
API Name: /api/osu/v1/customerproduct/associate/device
Request Method: POST
request: CustomerProductAssociateDeviceRequest {
cpmid: number;
devid:number;
}

26 Associate user with customer
API Name: /api/osu/v1/customer/associate/user
Request Method: POST
request: CustomerAssociateUserRequest {
custid: number;
usrname:string;
}

response: null;
Logic: `spl_master_usr_cpm_tbl`

26 Associate user with customer
API Name: /api/cu/v1/customer/associate/user
Request Method: POST
request: CustomerAssociateUserRequest {
usrname:string;
}

response: null;
Logic: `spl_master_usr_cpm_tbl`



/api/v1/customer/add - POST

/api/v1/customer/update  - POST

/api/v1/customer/info - GET
/api/v1/customer/info/basic - GET
/api/v1/customer/info/address - GET

/api/v1/customer/list - GET
/api/v1/customer/list/selection - GET
/api/v1/customer/list/basic - GET